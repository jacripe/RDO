---
- hosts: all
  vars:
    playbook: template-setup
    user: apollo
    home: /home/apollo
    ansdir: "{{ home }}/.ansible"
    bupdir: "{{ ansdir }}/bak/{{ playbook }}"
  tasks:
# Validate Variables
    - name: Debug User / Home
      debug:
        msg: "USER: {{ user }}; HOME: {{ home }}; ANSDIR: {{ ansdir }}; BUPDIR: {{ bupdir }}"

# Prep
    - name: Progress Directory
      file:
        path: "{{ ansdir }}/progress"
        state: directory
    - name: Backup Directory
      file:
        path: "{{ bupdir }}"
        state: directory
    - name: Backup Files
      shell: "cp -av {{ files | join(' ') }} {{ bupdir }}"
      vars:
        files:
        - /etc/hosts
        - /etc/sudoers
        - /etc/ssh/sshd_config
        - /etc/chrony.conf
      args:
        creates: "{{ bupdir }}/hosts"

# User Config
    - name: User .ssh Directory
      file:
        path: "{{ home }}/.ssh"
        state: directory
        mode: 0700
        owner: "{{ user }}"
        group: "{{ user }}"
    - name: SSH Keys
      copy:
        dest: "{{ home }}/.ssh/{{ item.dst }}"
        src: "../Templates/ssh/{{ item.src }}"
        mode: 0600
        owner: "{{ user }}"
        group: "{{ user }}"
      loop:
        - { dst: "id_rsa", src: "apollo_rsa" }
        - { dst: "id_rsa.pub", src: "apollo_rsa.pub" }
        - { dst: "authorized_keys", src: "authorized_keys" }

# Packages
    - name: Required Packages
      yum:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
        # Network
        - nmap
        - tcpdump
        - net-tools
        - bind-utils
        # System
        - pigz
        - acpid
        - chrony
        - strace
        - mlocate
        - yum-utils
        - bash-completion
        - yum-plugin-versionlock
        # Misc
        - vim

# Service Config
    - name: Update sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?\s*{{ item }}\s.*'
        line: "{{ item }} no"
      loop:
        - 'PasswordAuthentication'
        - 'PermitRootLogin'
      register: sshd_conf
    - name: Restart SSHd
      service:
        name: sshd
        state: restarted
      when: sshd_conf.changed == True
    - name: Update /etc/sudoers
      lineinfile:
        path: /etc/sudoers
        regexp: '^\s*%wheel\s.*'
        line: "%wheel ALL=(ALL) NOPASSWD: ALL"
        validate: '/sbin/visudo -c -f %s'
    - name: Start/Enable chronyd
      service:
        name: chronyd
        state: started
        enabled: yes

# Networking
    - name: Update hostname
      hostname:
        name: "{{ inventory_hostname }}"
    - name: Update /etc/hosts
      copy:
        src: ../Templates/etc/hosts
        dest: /etc/hosts
    - name: Verify Networking
      script: ../Templates/bin/envping.sh

# OpenStack Packages
    - name: RDO Queens (OSP13) Repository Package
      yum:
        name: centos-release-openstack-queens
        state: latest
    - name: OpenStack Packages
      yum:
        name: "{{ packages }}"
      vars:
        packages:
        - python-openstackclient
        - openstack-selinux
    - name: Update System
      yum:
        name: "*"
        state: latest

# Touch Progress File
    - name: Progress File
      shell: "touch {{ ansdir }}/progress/{{ playbook }}"
      args:
        creates: "{{ ansdir }}/progress/template"
