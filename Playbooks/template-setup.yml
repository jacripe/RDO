---
- name: Template Setup
  hosts: all
  vars:
    playbook: template-setup
    fqdn: "{{ inventory_hostname }}"
    ipaddr: "{{ ansible_default_ipv4.address }}"
    iface: "{{ ansible_default_ipv4.interface }}" 
    mac: "{{ ansible_default_ipv4.macaddress }}"
    user: apollo
    home: /home/apollo
    ansdir: "{{ home }}/.ansible"
    bupdir: "{{ ansdir }}/bak/{{ playbook }}"
    progdir: "{{ ansdir }}/progress"
    progfile: "{{ progdir }}/{{ playbook }}"
  tasks:
# Validate Variables
    - name: Debug User / Home
      debug:
        msg: "USER: {{ user }}; HOME: {{ home }}; ANSDIR: {{ ansdir }}; BUPDIR: {{ bupdir }}"

# Prep
    - name: Ansible Directories
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ bupdir }}"
        - "{{ progdir }}"
    - name: Kernel Config
      sysctl:
        name: vm.swappiness
        value: 90
        sysctl_set: True

# User Config
    - name: User .ssh Directory
      file:
        path: "{{ home }}/.ssh"
        state: directory
        mode: 0700
        owner: "{{ user }}"
        group: "{{ user }}"
    - name: SSH Keys
      copy:
        dest: "{{ home }}/.ssh/{{ item.dst }}"
        src: "../Templates/ssh/{{ item.src }}"
        mode: 0600
        owner: "{{ user }}"
        group: "{{ user }}"
      loop:
        - { dst: "id_rsa", src: "apollo_rsa" }
        - { dst: "id_rsa.pub", src: "apollo_rsa.pub" }
        - { dst: "authorized_keys", src: "authorized_keys" }
    - name: Root User
      user:
        name: root
        password: '$6$rounds=656000$i5EJmxBSz5L3J4B7$LkNQqmxS5oCWlYRGS8K4u4WYTlvtxAPipbUSTvDHKoAIRLnyUkrj1//ByVqIuzSacJBKoR9/ksSWdrAQkgoRc/'

# Packages
    - name: Required Packages
      yum:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
        # Network
        - nmap
        - wget
        - sysstat
        - tcpdump
        - net-tools
        - bind-utils
        # System
        - pigz
        - acpid
        - chrony
        - strace
        - mlocate
        - yum-utils
        #- libvirt-daemon
        #- libvirt-client
        - bash-completion
        - yum-plugin-versionlock
        # Misc
        - vim
    - name: Backup Files
      shell: "cp -av {{ files | join(' ') }} {{ bupdir }}"
      vars:
        files:
        - /etc/hosts
        - /etc/sudoers
        - /etc/ssh/sshd_config
        - /etc/chrony.conf
      args:
        creates: "{{ bupdir }}/hosts"

# Service Config
    - name: Update sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?\s*{{ item }}\s.*'
        line: "{{ item }} no"
      loop:
        - 'PasswordAuthentication'
        - 'PermitRootLogin'
      register: sshd_conf
    - name: Restart SSHd
      service:
        name: sshd
        state: restarted
      when: sshd_conf.changed == True
    - name: Update /etc/sudoers
      lineinfile:
        path: /etc/sudoers
        regexp: '^\s*%wheel\s.*'
        line: "%wheel ALL=(ALL) NOPASSWD: ALL"
        validate: '/sbin/visudo -c -f %s'
    - name: Start Services
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - chronyd
        #- libvirt-guests

# Networking
    - name: Update hostname
      hostname:
        name: "{{ inventory_hostname }}"
    - name: Update /etc/hosts
      copy:
        src: ../Templates/etc/hosts
        dest: /etc/hosts
    - name: Disable NetworkManager & Firewalld
      service:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop:
        - NetworkManager
        - firewalld
    - name: Upload ifcfg
      template:
        src: "../Templates/etc/ifcfg-pri.j2"
        dest: "/etc/sysconfig/network-scripts/ifcfg-{{ iface }}"
    #- name: Disable IPv6
    #  sysctl:
    #    name: net.ipv6.conf.all.disable_ipv6
    #    value: 1
    #    sysctl_set: yes
    #- name: Verify Networking
    #  script: ../Templates/bin/envping.sh

# OpenStack Packages
    - name: RDO Queens (OSP13) Repository Package
      yum:
        name: centos-release-openstack-queens
        state: latest
    - name: OpenStack Packages
      yum:
        name: "{{ packages }}"
      vars:
        packages:
        - python-openstackclient
        - openstack-selinux
    - name: Update System
      yum:
        name: "*"
        state: latest

# Touch Progress File
    - name: Progress File
      shell: "touch {{ progfile }}"
      args:
        creates: "{{ progfile }}"
