---
- name: Keystone Setup
  hosts: controller
  vars:
    playbook: keystone-setup 
    fqdn: "{{ ansible_fqdn }}"
    hostname: controller
    home: /home/apollo
    user: apollo
    suhome: /root
    ansdir: "{{ home }}/.ansible"
    bupdir: "{{ ansdir }}/bak/{{ playbook }}"
  tasks:
# Prep
    - name: Prep Backup Dir
      file:
        path: "{{ bupdir }}"
        state: directory
    - name: Prep Progress Dir
      file:
        path: "{{ ansdir }}/progress"
        state: directory

# Database
    - name: Keystone DB
      mysql_db:
        name: keystone
    - name: Keystone DB User
      mysql_user:
        name: keystone
        password: keystone
        priv: keystone.*:ALL
        host: "{{ item }}"
      loop:
        - localhost
        - '192.168.124.%'

# Packages
    - name: Install Packages
      yum:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
        - httpd
        - mod_wsgi
        - openstack-keystone

# Networking 
    - name: Update Firewall Services
      firewalld:
        service: "{{ item }}"
        state: enabled
        immediate: True
        permanent: True
      loop:
        - http
    - name: Update Firewall Ports
      firewalld:
        port: "{{ item.0 }}/{{ item.1 }}"
        state: enabled
        immediate: True
        permanent: True
      loop: "{{ ports|product(proto)|list }}"
      vars:
        ports:
        - '5000'
        - '35357'
        proto:
        - 'tcp'
        - 'udp'

# Misc.
    - name: Upload OpenRC Files
      copy:
        src: ../Templates/etc/{{ item.0 }}
        dest: "{{ item.1 }}/{{ item.0 }}"
      loop: "{{ files|product(dirs)|list }}"
      vars:
        files:
        - ".openrc.admin"
        - ".openrc.demo"
        dirs:
        - "{{ home }}"
        - "{{ suhome }}" 

# Service Config
    # Apache
    - name: Upload httpd Conf File
      template:
        src: ../Templates/etc/httpd.conf.j2
        dest: /etc/httpd/conf.d/00-openstack.conf
      register: httpd
    - name: Link wsgi-keystone.conf
      file:
        dest: /etc/httpd/conf.d/wsgi-keystone.conf
        src: /usr/share/keystone/wsgi-keystone.conf
        state: link
    - name: Restart Apache
      service:
        name: httpd
        state: restarted
        enabled: True
      when: httpd.changed == True
    - name: Backup Files
      shell: "cp -av {{ files | join(' ') }} {{ bupdir }}"
      vars:
        files:
        - /etc/keystone/keystone.conf
        - /etc/httpd/conf/httpd.conf
      args:
        creates: "{{ bupdir }}/keystone.conf"

    # Keystone
    - name: Update keystone.conf
      lineinfile:
        path: /etc/keystone/keystone.conf
        regexp: '^#?\s*{{ item.term }}\s*=.*'
        line: "{{ item.line }}"
      loop:
        - { term: "connection", line: "connection = mysql+pymysql://keystone:keystone@controller/keystone" }
        - { term: "provider", line: "provider = fernet" }
    - name: Initialize Keystone
      shell: "{{ item }}"
      loop:
        - "su -s /bin/sh -c 'keystone-manage db_sync' keystone"
        - "/bin/keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone"
        - "/bin/keystone-manage credential_setup --keystone-user keystone --keystone-group keystone"
        - "/bin/keystone-manage bootstrap --bootstrap-password openstack --bootstrap-admin-url http://{{ ansible_fqdn }}:5000/v3/ --bootstrap-internal-url http://{{ ansible_fqdn }}:5000/v3/ --bootstrap-public-url http://{{ ansible_fqdn }}:5000/v3/ --bootstrap-region-id RegionOne"
        - "touch {{ ansdir }}/progress/{{ playbook }}"
      args:
        creates: "{{ ansdir }}/progress/{{ playbook }}"
