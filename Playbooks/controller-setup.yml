---
- hosts: controller
  vars:
    playbook: controller-setup
    user: "apollo"
    home: "/home/apollo"
    suhome: "/root"
    ansdir: "{{ home }}/.ansible"
    bupdir: "{{ ansdir }}/bak/{{ playbook }}"
  tasks:
# Backup Files
    - name: Backup Directory
      file:
        path: "{{ bupdir }}"
        state: directory
    - name: Backup Files
      shell: "cp -av {{ files | join(' ') }} {{ bupdir }}"
      vars:
        files:
        - /etc/chrony.conf
      args:
        creates: "{{ bupdir }}/chrony.conf"

# User Config
    - name: Update Passwords
      user:
        name: root
        password: "$6$rounds=656000$6E9Tq9lnQHnz.A06$g/7vFnchshxeYY0OdZMeZkLyKewv1O6HaIvpBj52zOtOjq9nXfiTAWgg/L8tg0e2ZZhNj8G7i8WCVigfaFXXm0"

# Networking
    - name: Update Hostname
      hostname:
        name: ctrl.centos.rdo
    - name: Firewall Services
      firewalld:
        service: "{{ item }}"
        state: enabled
        immediate: True
        permanent: True
      loop:
        - ntp
        - mysql
    - name: Firewall TCP Ports
      firewalld:
        port: "{{ item }}/tcp"
        state: enabled
        immediate: True
        permanent: True
      loop:
        # RabbitMQ
        - 4369
        - 5671-5672
        - 25672
        # MemCacheD
        - 11211
        # Etcd
        - 2379-2380
    - name: Firewall UDP Ports
      firewalld:
        port: "{{ item }}/udp"
        state: enabled
        immediate: True
        permanent: True
      loop:
        # MemCacheD
        - 11211

# Service Install/Config
    - name: Install Services
      yum:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
        # SQL
        - mariadb
        - mariadb-server
        - python2-PyMySQL
        # Message Queue
        - rabbitmq-server
        # Cache
        - memcached
        - python-memcached
        # Misc
        - etcd

    # SQL
    - name: MariaDB config
      template:
        src: ../Templates/etc/my.cnf.d/openstack.cnf.j2
        dest: /etc/my.cnf.d/openstack.cnf
    - name: MariaDB Service
      service:
        name: mariadb
        state: restarted
        enabled: True
# Still working this one out...
#    - name: MySQL Secure Installation
#      shell: "mysql_secure_installation"

    # NTP
    - name: Update chrony.conf
      lineinfile:
        path: /etc/chrony.conf
        regexp: '^\s*#?\s*allow [0-9]+\..*'
        line: 'allow 192.168.124.0/24'
      register: chrony
    - name: Restart chrony
      service:
        name: chronyd
        state: restarted
      when: chrony.changed == True

    # Message Queue
    - name: RabbitMQ Service
      service:
        name: rabbitmq-server
        state: started
        enabled: True
    - name: RabbitMQ User
      rabbitmq_user:
        user: openstack
        password: openstack
        permissions:
          - vhost: /
            configure_priv: .*
            write_priv: .*
            read_priv: .*
        state: present

    # Cache
    - name: Backup memcached Conf File
      shell: "cp -av /etc/sysconfig/memcached {{ bupdir }}"
      args:
        creates: "{{ bupdir }}/memcached"
    - name: Configure MemCacheD
      lineinfile:
        path: /etc/sysconfig/memcached
        regexp: '^OPTIONS=.*'
        line: 'OPTIONS=""'
    - name: Restart MemCacheD
      service:
        name: memcached
        state: restarted
        enabled: True

    # Etcd
    - name: Set IP Address
      set_fact:
        ipaddr: "{{ ansible_default_ipv4.address }}"
    - name: Backup etcd Conf File
      shell: "cp -av /etc/etcd/etcd.conf {{ bupdir }}"
      args:
        creates: "{{ bupdir }}/etcd.conf"
    - name:
      lineinfile:
        path: /etc/etcd/etcd.conf
        regexp: '^\s*#?\s*{{ item.opt }}=.*'
        line: '{{ item.opt }}="{{ item.val }}"'
      loop:
        - { opt: "ETCD_LISTEN_PEER_URLS", val: "http://{{ ipaddr }}:2380" }
        - { opt: "ETCD_LISTEN_CLIENT_URLS", val: "http://{{ ipaddr}}:2379,http://localhost:2379" }
        - { opt: "ETCD_NAME", val: "controller" } 
        - { opt: "ETCD_INITIAL_ADVERTISE_PEER_URLS", val: "http://{{ ipaddr }}:2380" }
        - { opt: "ETCD_ADVERTISE_CLIENT_URLS", val: "http://{{ ipaddr }}:2379" }
        - { opt: "ETCD_INITIAL_CLUSTER", val: "controller=http://{{ ipaddr }}:2380" }
        - { opt: "ETCD_INITIAL_CLUSTER_TOKEN", val: "etcd-cluster-01" }
        - { opt: "ETCD_INITIAL_CLUSTER_STATE", val: "new" }
      register: etcd
    - name: Start Etcd Service
      service:
        name: etcd
        state: restarted
        enabled: True
      when: etcd.changed == True 
