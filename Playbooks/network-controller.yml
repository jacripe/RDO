---
- name: Network Controller
  hosts: controller
  vars:
    playbook: network-controller
    fqdn: "{{ ansible_fqdn }}"
    ipaddr: "{{ ansible_default_ipv4.address }}"
    mac: "{{ ansible_eth1.macaddress }}"
    user: apollo
    home: "/home/{{ user }}"
    suhome: /root
    ansdir: "{{ home }}/.ansible"
    bupdir: "{{ ansdir }}/bak/{{ playbook }}"
    progdir: "{{ ansdir }}/progress"
    progfile: "{{ progdir }}/{{ playbook }}"

  tasks:
# Prep
    - name: Ansible Directories
      file:
        name: "{{ item }}"
        state: directory
      loop:
        - "{{ bupdir }}"
        - "{{ progdir }}"

# Networking
    - name: IPTables
      iptables:
        chain: INPUT
        jump: ACCEPT
        protocol: tcp
        destination_port: 9696
    - name: Save IPTables
      shell: "service iptables save"
    - name: eth1 Config
      template:
        src: ../Templates/etc/ifcfg-eth1.j2
        dest: /etc/sysconfig/network-scripts/ifcfg-eth1
    #- name: Update Firewall Ports
    #  firewalld:
    #    port: "9696/tcp"
    #    state: enabled
    #    immediate: True
    #    permanent: True

# Neutron Database
    - name: Neutron DB
      mysql_db:
        name: neutron
    - name: Neutron DB User
      mysql_user:
        name: neutron
        password: neutron
        host: "{{ item }}"
        priv: "neutron.*:ALL"
      loop:
        - '127.0.0.1'
        - '192.168.124.%'

# OpenStack Config
    - name: Openstack Config
      shell: "source {{ home }}/.openrc.admin; {{ item }}"
      loop:
        - '/bin/openstack user create --domain default --password neutron neutron'
        - '/bin/openstack role add --project service --user neutron admin'
        - '/bin/openstack service create --name neutron --description "OpenStack Networking" network'
        - '/bin/openstack endpoint create --region RegionOne network public http://{{ fqdn }}:9696' 
        - '/bin/openstack endpoint create --region RegionOne network internal http://{{ fqdn }}:9696' 
        - '/bin/openstack endpoint create --region RegionOne network admin http://{{ fqdn }}:9696' 
        - 'touch {{ progfile }}.os'
      args:
        creates: "{{ progfile }}.os"

# Service Install/Config
    - name: Install Service
      yum:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
        - openstack-neutron
        - openstack-neutron-ml2
        - openstack-neutron-linuxbridge
        - ebtables
    - name: Load br_netfilter
      modprobe:
        name: br_netfilter
    - name: Kernel Config
      sysctl:
        name: "{{ item }}"
        value: 1
        sysctl_set: yes
      loop:
        - net.bridge.bridge-nf-call-iptables
        - net.bridge.bridge-nf-call-ip6tables
    - name: Backup Files
      shell: "cp -av {{ files|join(' ') }} {{ bupdir }}"
      vars:
        files:
        - /etc/neutron/neutron.conf
        - /etc/neutron/plugins/ml2/ml2_conf.ini
        - /etc/neutron/plugins/ml2/linuxbridge_agent.ini
        - /etc/neutron/l3_agent.ini
        - /etc/neutron/dhcp_agent.ini
        - /etc/nova/nova.conf
      args:
        creates: "{{ bupdir }}/nova.conf"
    - name: Upload Configs
      template:
        src: "../Templates/etc/{{ item.src }}"
        dest: "{{ item.dest }}"
      loop:
        - { src: 'neutron.conf.j2', dest: '/etc/neutron/neutron.conf' }
        - { src: 'ml2_conf.ini.j2', dest: '/etc/neutron/plugins/ml2/ml2_conf.ini' }
        - { src: 'linuxbridge_agent.ini.j2', dest: '/etc/neutron/plugins/ml2/linuxbridge_agent.ini' }
        - { src: 'l3_agent.ini.j2', dest: '/etc/neutron/l3_agent.ini' }
        - { src: 'dhcp_agent.ini.j2', dest: '/etc/neutron/dhcp_agent.ini' }
        - { src: 'nova.conf.ctrl.j2', dest: '/etc/nova/nova.conf' }
      register: config
    - name: ML2 Plugin Symlink
      file:
        path: /etc/neutron/plugin.ini
        src: /etc/neutron/plugins/ml2/ml2_conf.ini
        state: link

# Initialize Neutron
    - name: Initialize Neutron DB
      shell: "{{ item }}"
      loop:
        - 'su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron'
        - 'touch {{ progfile }}.sql'
      args:
        creates: "{{ progfile }}.sql"

# Re/Start Services
    - name: ReStart Services
      service:
        name: "{{ item }}"
        state: restarted
        enabled: True
      loop:
        - openstack-nova-api
        - neutron-server
        - neutron-linuxbridge-agent
        - neutron-dhcp-agent
        - neutron-metadata-agent
        - neutron-l3-agent
      when: config.changed == True 
